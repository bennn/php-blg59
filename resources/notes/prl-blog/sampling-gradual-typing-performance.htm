<!DOCTYPE html>
<!-- saved from url=(0075)http://prl.ccs.neu.edu/blog/2018/05/08/sampling-gradual-typing-performance/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    
    <title>Sampling Gradual Typing Performance</title>
    <meta name="description" content="This post explains the sampling method introduced in the paper _On the Cost of Type-Tag Soundness_...">
    <meta name="author" content="PRL">
    <meta name="keywords" content="gradual typing, migratory typing, performance, statistics, Takikawa constant, by Ben Greenman, by Zeina Migeed">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="http://prl.ccs.neu.edu/img/favicon.ico">
    <link rel="canonical" href="http://prl.ccs.neu.edu/blog/2018/05/08/sampling-gradual-typing-performance/">
    <link rel="next" href="http://prl.ccs.neu.edu/blog/2018/04/27/the-racket-school-2018-create-your-own-language/">

    <script src="./src/cb=gapi.loaded_1" async=""></script><script src="./src/cb=gapi.loaded_0" async=""></script><script id="twitter-wjs" src="./src/widgets.js"></script><script type="text/javascript" async="" src="./src/MathJax.js">
    </script>
    <!-- CSS -->
    <link rel="stylesheet" type="text/css" href="./src/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="./src/pygments.css">
    <link rel="stylesheet" type="text/css" href="./src/custom.css">
    <link rel="stylesheet" type="text/css" href="./src/racket.css">
    <link rel="stylesheet" type="text/css" href="./src/scribble.css">
    <!-- Feeds -->
    <link rel="alternate" type="application/atom+xml" href="http://prl.ccs.neu.edu/blog/feeds/all.atom.xml" title="Atom Feed">
    <link rel="alternate" type="application/rss+xml" href="http://prl.ccs.neu.edu/blog/feeds/all.rss.xml" title="RSS Feed">
  <script type="text/javascript" charset="utf-8" async="" src="./src/button.3ebb4253c7cb2cc3c9eaac42044fc82c.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover, .MJXp-munder {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > *, .MJXp-munder > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head>
  <body id="pn-top" class="subpages"><div id="MathJax_Message" style="display: none;"></div>
    <nav class="navbar navbar-inverse">
      <div class="container">
        <div class="row">
          <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
              <span class="sr-only">Toggle navigation</span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>
          </div>
          <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
              <li role="presentation"><a href="http://prl.ccs.neu.edu/">Home</a></li>
              <li role="presentation"><a href="http://prl.ccs.neu.edu/people.html">People</a></li>
              <li role="presentation"><a href="http://prl.ccs.neu.edu/teaching.html">Teaching</a></li>
              <li role="presentation"><a href="http://prl.ccs.neu.edu/seminars.html">Seminars</a></li>
              <li role="presentation"><a href="http://prl.ccs.neu.edu/software.html">Software</a></li>
              <li role="presentation"><a href="http://prl.ccs.neu.edu/publications.html">Publications</a></li>
              <li role="presentation"><a href="http://prl.ccs.neu.edu/new-members.html">New Members</a></li>
              <li role="presentation"><a href="http://prl.ccs.neu.edu/contact.html">Contact</a></li>
              <li role="presentation" class="active"><a href="http://prl.ccs.neu.edu/blog/index.html">Blog</a></li>
            </ul>
          </div><!--/.navbar-collapse -->
        </div>
      </div>
    </nav>
    <div class="jumbotron subpages">
      <div class="container">
        <div class="row">
          <a style="text-decoration:none; color:white" href="http://prl.ccs.neu.edu/blog/index.html">
            <div class="col-md-12">
              <h1>Inside PRL</h1>
              <p>Reading between the parentheses</p>
            </div>
          </a>
        </div>
      </div>
    </div>
    <div class="pn-main-wrapper">
      <div class="content">
        <div class="container">
          <div class="row">

            <!-- Main column -->
            <div id="content" class="col-md-12">



              <article>
  <header>
    <h1>Sampling Gradual Typing Performance</h1>
    <p class="date-and-tags">
<time datetime="2018-05-08" pubdate="true">2018-05-08</time> :: <span class="tags"><a href="http://prl.ccs.neu.edu/blog/tags/gradual-typing.html">gradual typing</a>, <a href="http://prl.ccs.neu.edu/blog/tags/migratory-typing.html">migratory typing</a>, <a href="http://prl.ccs.neu.edu/blog/tags/performance.html">performance</a>, <a href="http://prl.ccs.neu.edu/blog/tags/statistics.html">statistics</a>, <a href="http://prl.ccs.neu.edu/blog/tags/Takikawa-constant.html">Takikawa constant</a>, <a href="http://prl.ccs.neu.edu/blog/tags/by-Ben-Greenman.html">by Ben Greenman</a>, <a href="http://prl.ccs.neu.edu/blog/tags/by-Zeina-Migeed.html">by Zeina Migeed</a></span></p>
  </header>

<p>This post explains the sampling method introduced in the paper <a href="http://www.ccs.neu.edu/home/types/publications/publications.html#gm-pepm-2018"><em>On the Cost of Type-Tag Soundness</em></a></p>
<!-- more-->

<h2 id="quick-reference-how-to-apply-the-method">Quick Reference: How to apply the method</h2>

<ol>
 <li>Find an untyped program, measure its running time.</li>
 <li>Define a <em>granularity</em> for type annotations (by-function, by-module, by-program, ….).</li>
 <li>Define a sample size <strong>s</strong> and number of samples <strong>r</strong>.</li>
 <li>Randomly select <strong>s</strong> <em>configurations</em> uniformly at random, measure their running time.</li>
 <li>Repeat the previous step <strong>r</strong> times.</li>
 <li>Pick a positive real number <strong>D</strong>.</li>
 <li>Count the proportion of configurations in each sample with running time less-than-or-equal-to <strong>D</strong></li>
 <li>Build a 95% confidence interval for the <strong>r</strong> proportions computed in the previous step</li>
 <li>Conclusion: there is a good chance that your interval contains the true proportion of configurations with running time less-than-or-equal-to <strong>D</strong></li></ol>

<h2 id="background-what-to-measure">Background: what to measure</h2>

<p>A migratory typing system adds static typing to a dynamically-typed (or, untyped) language. The recipe for “adding static typing” has a few steps:</p>

<ul>
 <li>add a syntax for type annotations</li>
 <li>add a static type checker</li>
 <li>add a semantics for statically-typed parts of the program</li></ul>

<p>If the semantics for statically-typed parts of the program is <strong>not</strong> the same  as the semantics for dynamically-typed parts, then it is important to measure  performance.</p>

<p>The key question is: how does adding type annotations affect the  running time of a working program? We do not know how to answer this question directly.</p>

<p>An easier question, that we can answer, is: for a few programs each with  one full set of type annotations, how does adding or removing the chosen type  annotations affect the running time of these programs?</p>

<p>The next two sections give two methods for answering this question.</p>

<h2 id="exhaustive-method">Exhaustive Method</h2>

<p>One way to answer our easier question is to remove type annotations one  “unit” at a time and measure the running time of all these partially-typed  programs. We call the “unit” the <em>granularity</em> of the performance evaluation. For example, some choices for granularity are to remove types one module  at a time, to remove types one function at a time, or to remove types  one variable at a time. We call the “partially-typed programs” the <em>configurations</em> of the original  dynamically-typed program. Note that the number of configurations depends on the choice of granularity  — I can’t just use the word <em>configurations</em> without telling you the  granularity I have in mind.</p>

<p>After measuring the running time of all configurations, we can summarize the  results. One way to summarize is to pick a number <strong>D</strong> and count the number of configurations  that run at most <strong>D</strong> times slower than the original dynamically-typed program. If this number is large, then the takeaway is:  if <em>you</em> are willing to accept at most a <strong>D</strong>x slowdown, and you add your  own type annotations to your own program, then there’s some hope that your  configuration runs at most <strong>D</strong> times slower than your original program.</p>

<blockquote>
 <p>Credit for the exhaustive method: <a href="https://www2.ccs.neu.edu/racket/pubs/popl16-tfgnvf.pdf"><em>Is Sound Gradual Typing Dead?</em></a> and <a href="https://www2.ccs.neu.edu/racket/pubs/ecoop2015-takikawa-et-al.pdf"><em>Toward Practical Gradual Typing</em></a></p></blockquote>

<h2 id="simple-random-approximation-method">Simple Random Approximation Method</h2>

<p>The method above does not scale to large programs or fine granularities  because it asks for an exponential number of measurements. E.g., if there are 20 units to add or remove types from, then there are 1 million  configurations to measure. Exponentials are bad.</p>

<p><a href="http://www.ccs.neu.edu/home/types/publications/publications.html#gm-pepm-2018"><em>On the Cost of Type-Tag Soundness</em></a>,  suggests a method based on simple random sampling that answers a similar question. Instead of measuring the true proportion of configurations that run at most  <strong>D</strong> times slower than the original dynamically-typed program, we:</p>

<ul>
 <li>pick a sample size <strong>s</strong> (in the paper, we used <strong>s = 10M</strong> where <strong>M</strong> is the number of units),</li>
 <li>pick a number of samples <strong>r</strong> (in the paper, we used <strong>r = 10</strong>),</li>
 <li>and build a 95% confidence interval for the true proportion of configurations  that run at most <strong>D</strong> times slower than the original program (from the  <strong>r</strong> proportions of configurations that run at most <strong>D</strong> times slower than the  original program in each of the <strong>r</strong> samples).</li></ul>

<p>The method is outlined above, described in the paper, and validated in that paper’s appendix. Please let us know if you have more questions.</p>

<blockquote>
 <p>Maybe you’re wondering, “gee why do they keep writing out ‘configurations that  run at most ….’ instead of something shorter?”. Well, the short version is <em><strong>D</strong>-deliverable</em> and it was introduced in the <a href="https://www2.ccs.neu.edu/racket/pubs/popl16-tfgnvf.pdf"><em>Is Sound Gradual Typing Dead?</em></a> paper. Unfortunately, (1) that paper instantiated <strong>D</strong> to <strong>3</strong>-deliverable in order to  explain a few graphs and (2) at least two published papers (<a href="https://dl.acm.org/citation.cfm?id=3009849">paper 1</a>, <a href="https://dl.acm.org/citation.cfm?id=3133878">paper 2</a>)  now cite us as saying <strong>3</strong>x overhead is the cutoff between a good migratory  typing system and a bad one.</p>
 <p>…</p>
 <p>If we can’t trust scientists to understand, then we <em>definitely</em> can’t trust  you folks on the internet.</p></blockquote>

<h2 id="faq">FAQ</h2>

<h3 id="q-what-is-the-sampling-method-useful-for">Q. What is the sampling method useful for?</h3>

<ul>
 <li>Making a confidence interval for the true proportion of configurations that  run at most <strong>D</strong> times slower than some baseline, for your favorite value of <strong>D</strong>.</li></ul>

<h3 id="q-what-is-the-sampling-method-not-useful-for">Q. What is the sampling method <strong>not</strong> useful for?</h3>

<ul>
 <li>Finding the slowest configuration.</li>
 <li>Finding the average running time of all configurations.</li>
 <li>Evaluations where “removing types” might involve changing <strong>List[Int]</strong> to <strong>List[Dyn]</strong>, etc.</li>
 <li>Situations where its wrong to assume that a programmer will start from untyped and pick a configuration uniformly at random</li>
 <li>…. many more ….</li></ul>

<h3 id="q-why-is-it-okay-to-choose-d-after-collecting-the-samples">Q. Why is it okay to choose <strong>D</strong> after collecting the samples?</h3>

<p>The “quick reference” at the top of this post suggests choosing a value for <strong>D</strong>  (the cutoff between good and bad performance) after sampling configurations  and measuring their running time. This may sound strange, because (1) the value of <strong>D</strong> affects our bottom-line  judgment about the proportion of configurations with good performance, and (2)  shouldn’t and value that affects the bottom line be fixed before taking samples? (To avoid accidental <a href="https://en.wikipedia.org/wiki/Data_dredging">data dredging</a>.)</p>

<p>The reason it is ok to pick <strong>D</strong> after taking the sample is that the  running times in the sample are independent of the choice of <strong>D</strong>.</p>

<p>For example, if one person chose <strong>D=3</strong> and a second person chose <strong>D=9</strong>,  both would follow the same protocol independent of <strong>D</strong> to take samples.</p>

<h3 id="q-how-does-migratory-typing-relate-to-gradual-typing">Q. How does migratory typing relate to gradual typing?</h3>

<p>Gradual typing is not just about adding a type system to an existing programming  language. See <a href="http://drops.dagstuhl.de/opus/volltexte/2015/5031/"><em>Refined Criteria for Gradual Typing</em></a>  and <a href="http://drops.dagstuhl.de/opus/volltexte/2017/7120/"><em>Migratory Typing: 10 Years Later</em></a>  for details.</p>

<h3 id="q-do-you-have-code-i-can-use-to-plot-sampling-data">Q. Do you have code I can use to plot sampling data?</h3>

<p>Yes, start here:</p>

<ul>
 <li><a href="http://docs.racket-lang.org/gtp-plot/index.html#%28def._%28%28lib._gtp-plot%2Fplot..rkt%29._samples-plot%29%29">http://docs.racket-lang.org/gtp-plot/index.html#%28def._%28%28lib._gtp-plot%2Fplot..rkt%29._samples-plot%29%29</a></li></ul>

<p>Please ask questions and open issues if you have trouble. The source is here:</p>

<ul>
 <li><a href="https://github.com/bennn/gtp-plot">https://github.com/bennn/gtp-plot</a></li></ul>

<h3 id="q-where-is-code-for-the-sampling-paper">Q. Where is code for the sampling paper?</h3>

<p>Start here:</p>

<ul>
 <li><a href="https://pkgd.racket-lang.org/pkgn/package/gm-pepm-2018">https://pkgd.racket-lang.org/pkgn/package/gm-pepm-2018</a></li></ul>

<p>Source is here:</p>

<ul>
 <li><a href="https://github.com/nuprl/retic_performance">https://github.com/nuprl/retic_performance</a></li></ul>

<h2 id="closing-thoughts">Closing Thoughts</h2>

<p>Statistics is easy to do wrong. Please let us know if you think our method is doing bad statistics.</p>
  <br><br>
  <footer>
    <script type="text/javascript">
      !function(d,s,id){
          var js,fjs=d.getElementsByTagName(s)[0];
          if(!d.getElementById(id)){
              js=d.createElement(s);
              js.id=id;
              js.src="//platform.twitter.com/widgets.js";
              fjs.parentNode.insertBefore(js,fjs);
          }
      }(document,"script","twitter-wjs");
    </script>
    <iframe id="twitter-widget-1" scrolling="no" frameborder="0" allowtransparency="true" class="twitter-share-button twitter-share-button-rendered twitter-tweet-button" title="Twitter Tweet Button" src="./src/tweet_button.4ddf50b7ac5c5f06f6679f003b742641.en.html" style="position: static; visibility: visible; width: 61px; height: 20px;" data-url="http://prl.ccs.neu.edu/blog/2018/05/08/sampling-gradual-typing-performance/"></iframe>
    <script type="text/javascript" src="./src/plusone.js" gapi_processed="true"></script>
    <div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 32px; height: 20px;"><iframe ng-non-bindable="" frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 32px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" tabindex="0" vspace="0" width="100%" id="I0_1538529528030" name="I0_1538529528030" src="./src/fastbutton.html" data-gapiattached="true" title="G+"></iframe></div>
    <ul class="pager">

    <li class="next">
      <a href="http://prl.ccs.neu.edu/blog/2018/04/27/the-racket-school-2018-create-your-own-language/"><em>The Racket School 2018: Create your own language</em> →</a>
    </li>
    </ul>
  </footer>
</article>
            </div>
          </div>
        </div>
        <footer class="footer">
          <hr>
          <p><iframe id="twitter-widget-0" scrolling="no" frameborder="0" allowtransparency="true" class="twitter-follow-button twitter-follow-button-rendered" title="Twitter Follow Button" src="./src/follow_button.4ddf50b7ac5c5f06f6679f003b742641.en.html" style="position: static; visibility: visible; width: 114px; height: 20px;" data-screen-name="neu_prl"></iframe>
             <script type="text/javascript">
               !function(d,s,id){
                   var js,fjs=d.getElementsByTagName(s)[0];
                   if(!d.getElementById(id)){
                       js=d.createElement(s);
                       js.id=id;
                       js.src="//platform.twitter.com/widgets.js";
                       fjs.parentNode.insertBefore(js,fjs);
                   }
               }(document,"script","twitter-wjs");
             </script></p>
          <p>Blog generated
          by <a href="https://github.com/greghendershott/frog">Frog</a>,
          using <a href="http://twitter.github.com/bootstrap/index.html">Bootstrap</a>.</p>
          <p>© Copyright Programming Research Laboratory 2015-2016 | made by <a href="http://www.catchexception.cz/" target="_blank">Catchexception s.r.o.</a> | source on <a href="https://github.com/nuprl/website">GitHub</a></p>
        </footer>
      </div>
    </div>
    <!-- </body> JS -->
    <script type="text/javascript" src="./src/jquery.min.js"></script>
    <script type="text/javascript" src="./src/bootstrap.min.js"></script>
    <script type="text/javascript" src="./src/custom.js"></script>
    <script type="text/javascript" src="./src/analytics.js"></script>
  
<iframe scrolling="no" frameborder="0" allowtransparency="true" src="./src/widget_iframe.4ddf50b7ac5c5f06f6679f003b742641.html" title="Twitter settings iframe" style="display: none;"></iframe><iframe name="oauth2relay861230445" id="oauth2relay861230445" src="./src/postmessageRelay.html" tabindex="-1" aria-hidden="true" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe><iframe id="rufous-sandbox" scrolling="no" frameborder="0" allowtransparency="true" allowfullscreen="true" style="position: absolute; visibility: hidden; display: none; width: 0px; height: 0px; padding: 0px; border: none;" title="Twitter analytics iframe" src="./src/saved_resource.html"></iframe></body></html>
